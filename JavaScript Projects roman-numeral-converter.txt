function convertToRoman(num) {
  let romanNumeral = '';
  let ones;

  /*
  Recursively call setNumerals, adding a Roman numeral to the romanNumerals string and subtracting the value of the Roman numeral from num, until all non-one Roman numerals have been added to the string 
  */

  function setNumerals(remainder) {
    if(remainder >= 1000) {
            romanNumeral += 'M';
            return setNumerals(remainder - 1000);
        } else if(remainder >= 900) {
            romanNumeral += 'CM';
            return setNumerals(remainder - 900);
        } else if(remainder >= 500) {
            romanNumeral += 'D';
            return setNumerals(remainder - 500);
        } else if(remainder >= 400) {
            romanNumeral += 'CD';
            return setNumerals(remainder - 400);
        } else if(remainder >= 100) {
            romanNumeral += 'C';
            return setNumerals(remainder - 100);
        } else if(remainder >= 90) {
            romanNumeral += 'XC';
            return setNumerals(remainder - 90);
        } else if(remainder >= 50) {
            romanNumeral += 'L';
            return setNumerals(remainder - 50);
        } else if(remainder >= 40) {
            romanNumeral += 'XL';
            return setNumerals(remainder - 40);
        } else if (remainder >= 10) {
            romanNumeral += 'X';
            return setNumerals(remainder - 10);
        } else if(remainder >= 9) {
            romanNumeral += 'IX';
            return setNumerals(remainder - 9);
        } else if(remainder >= 5) {
            romanNumeral += 'V';
            return setNumerals(remainder - 5);
        } else if(remainder >= 4) {
            romanNumeral += 'IV';
            return setNumerals(remainder - 4);
        } else {
            ones = remainder;
        }       
  }

  setNumerals(num);

  // add any remaining "one" Roman numerals to the string to complete the string
  for(let i = 0; i < ones; i++) {
    romanNumeral += 'I';
  } 
  console.log(romanNumeral);

 return romanNumeral;
} 

convertToRoman(36);